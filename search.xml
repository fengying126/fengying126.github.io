<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础--（一、数据类型：数字与字符串）</title>
      <link href="/2019/10/18/python-ji-chu/python-ji-chu-yi-shu-ju-lei-xing/"/>
      <url>/2019/10/18/python-ji-chu/python-ji-chu-yi-shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="一、python3介绍"><a href="#一、python3介绍" class="headerlink" title="一、python3介绍"></a>一、python3介绍</h2><p>python是一门面向对象的编程语言，其语言简洁优雅、功能强大，可移植、可扩展、可嵌入。其底层由C实现。<br>python解释器：<br>有Cpython、Jpython、Pypy等解释器，其主要特点是，源码逐行解释成机器码并立即执行。<br>python代码特色：使用缩进来表示代码块，不需要使用大括号 {} ，缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数，Python通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠()来实现多行语句。<br>python代码注释：<br>Python中单行注释以 # 开头，多行注释可以用多个 # 号，还有 ‘’’ 和 “””</p><h2 id="二、python3数据类型"><a href="#二、python3数据类型" class="headerlink" title="二、python3数据类型"></a>二、python3数据类型</h2><p>Python3 中有六个标准的数据类型：<br>Number（数字）<br>String（字符串）<br>List（列表）<br>Tuple（元组）<br>Set（集合）<br>Dictionary（字典）</p><p>Python3 的六个标准数据类型中：<br><em>不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）；<br>可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）。</em></p><h3 id="（一）Number类型"><a href="#（一）Number类型" class="headerlink" title="（一）Number类型"></a>（一）Number类型</h3><p>Python3 支持 int、float、bool、complex（复数）。<br>在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。<br>在python中,True==1,False==0。<br>运算符 +、-、<em>、/ 的用法和其他大部分语言一样,括号 (()) 用来分组,<br>可以使用 *</em> 运算符来计算乘方, % 用来求模，等号 (=) 用于给一个变量赋值,如果一个变量未定义（未赋值），试图使用它时会向你提示错误;<br>Python中提供浮点数的完整支持；包含多种混合类型运算数的运算会把整数转换为浮点数:<br>内置的 type() 函数可以用来查询变量所指的对象类型。</p><table><thead><tr><th align="left">运算</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left">x + y</td><td align="left">x 和 y 的和</td></tr><tr><td align="left">x - y</td><td align="left">x 和 y 的差</td></tr><tr><td align="left">x * y</td><td align="left">x 和 y 的乘积</td></tr><tr><td align="left">x / y</td><td align="left">x 和 y 的商</td></tr><tr><td align="left">x // y</td><td align="left">x 和 y 的商数</td></tr><tr><td align="left">x % y</td><td align="left">remainder of x / y</td></tr><tr><td align="left">-x</td><td align="left">x 取反</td></tr><tr><td align="left">+x</td><td align="left">x 不变</td></tr><tr><td align="left">abs(x)</td><td align="left">x 的绝对值或大小</td></tr><tr><td align="left">int(x)</td><td align="left">将 x 转换为整数</td></tr><tr><td align="left">float(x)</td><td align="left">将 x 转换为浮点数</td></tr><tr><td align="left">complex(re, im)</td><td align="left">一个带有实部 re 和虚部 im 的复数。im 默认为0。</td></tr><tr><td align="left">c.conjugate()</td><td align="left">复数 c 的共轭</td></tr><tr><td align="left">divmod(x, y)</td><td align="left">(x // y, x % y)</td></tr><tr><td align="left">pow(x, y)</td><td align="left">x 的 y 次幂</td></tr><tr><td align="left">x ** y</td><td align="left">x 的 y 次幂</td></tr></tbody></table><pre><code># Number类型：num_1 = 5num_2 = 5.0num_3 = True  # True == 1 and False == 0num_4 = 5 + 8jprint(type(num_1), type(num_2), type(num_3), type(num_4))</code></pre><p>输出结果：</p><pre><code>&lt;class &#39;int&#39;&gt; &lt;class &#39;float&#39;&gt; &lt;class &#39;bool&#39;&gt; &lt;class &#39;complex&#39;&gt;</code></pre><pre><code>x = 5y = 3print(&#39;python的加法： x+y=&#39;, x+y)print(&#39;python的减法： x-y=&#39;, x-y)print(&#39;python的乘法： x*y=&#39;, x*y)print(&#39;python的除法： x/y=&#39;, x/y)print(&#39;python的幂运算： x**y=&#39;, x**y)print(&#39;python的求模： x%y=&#39;, x%y)</code></pre><p>输出结果：</p><pre><code>python的加法： x+y= 8python的减法： x-y= 2python的乘法： x*y= 15python的除法： x/y= 1.6666666666666667python的幂运算： x**y= 125python的求模： x%y= 2</code></pre><p>python有专门的针对数学运算的包math，可以使用import math导入使用<br>整数类型也有按位运算符，用’| ^ &amp; &lt;&lt; &gt;&gt; ~’来操作，详细可参考官方文档</p><h3 id="（二）String（字符串）"><a href="#（二）String（字符串）" class="headerlink" title="（二）String（字符串）"></a>（二）String（字符串）</h3><p>在 Python 中处理文本数据是使用 str 对象，也称为 字符串。 字符串是由 Unicode 码位构成的不可变 序列。 字符串字面值有多种不同的写法：<br>单引号: ‘允许包含有 “双” 引号’<br>双引号: “允许包含有 ‘单’ 引号”。<br>三重引号: ‘’’三重单引号’’’, “””三重双引号”””</p><p>字符串的索引切片：</p><pre><code>str_1 = &#39;python&#39;print(str_1)print(str_1[0:2])  # 取前两位（python语言的索引是从0开始编号的,[a:b]前闭后开）print(str_1[1:])  # 取从第1个字符开始的全部内容print(str_1[-2:])  # 取从倒数第2位字符开始的全部</code></pre><p>字符串可以用’+’ 或 ‘join’进行拼接</p><pre><code>print(&#39; &#39;.join([&#39;I&#39;,&#39;am&#39;,&#39;learning&#39;,&#39;python&#39;])) # 将空格符作为连接条件，进行拼接print(&#39;I&#39; + &#39; &#39;+ &#39;am&#39; + &#39; &#39; + &#39;learning&#39;+ &#39; &#39; + &#39;python&#39;) # 用加号拼接</code></pre><p>输出：</p><pre><code>I am learning pythonI am learning python</code></pre><p>字符串格式化，用format或%s,%d等</p><pre><code>print(&#39;他今年%d岁了！&#39; % 30) # 输出：他今年30岁了！print(&#39;他今年{0}岁了！&#39;.format(30)) # 输出：他今年30岁了！</code></pre><table><thead><tr><th align="left">转换说明符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">%d，%i</td><td align="left">转换为带符号的十进制形式的整数</td></tr><tr><td align="left">%o</td><td align="left">转换为带符号的八进制形式的整数</td></tr><tr><td align="left">%x，%X</td><td align="left">转换为带符号的十六进制形式的整数</td></tr><tr><td align="left">%e</td><td align="left">转化为科学计数法表示的浮点数（e 小写）</td></tr><tr><td align="left">%E</td><td align="left">转化为科学计数法表示的浮点数（E 大写）</td></tr><tr><td align="left">%f，%F</td><td align="left">转化为十进制形式的浮点数</td></tr><tr><td align="left">%g</td><td align="left">智能选择使用 %f 或 %e 格式</td></tr><tr><td align="left">%G</td><td align="left">智能选择使用 %F 或 %E 格式</td></tr><tr><td align="left">%c</td><td align="left">格式化字符及其 ASCII 码</td></tr><tr><td align="left">%r</td><td align="left">使用 repr() 将变量或表达式转换为字符串</td></tr><tr><td align="left">%s</td><td align="left">使用 str() 将变量或表达式转换为字符串</td></tr></tbody></table><p>字符串其他方法：<br>title,lower,upper,capitalize,isdigit，find等，具体可参考官方文档</p>]]></content>
      
      
      <categories>
          
          <category> python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
